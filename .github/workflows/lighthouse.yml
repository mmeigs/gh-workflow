on:
  push:
    branches:
      - "main"
  pull_request:
    types: ["opened", "synchronize"]

name: Run and Upload Lighthouse Reports to MongoDB
jobs: 
  staging:
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        project: ['cloud-docs']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Output commit timestamp
        id: commit_timestamp_step
        run: |
          timestamp=$(git log -1 --format=%cd --date=iso-strict)
          echo "::set-output name=commit_timestamp::$timestamp"
      - name: One flow
        run: |
          echo "Discovering the environment stage:"
          if [[ ${{ github.ref != 'refs/heads/main' }} ]]; then
            response=$(curl --request GET --url 'https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits?page=1&per_page=1000' --header 'Accept: application/vnd.github.v3+json' --header 'Content-Type: application/json')
            last_commit_message=$(echo "$response" | jq '.[-1].commit.message')
            echo "COMMIT_MESSAGE=$last_commit_message" >> "$GITHUB_OUPUT"
          else
            echo "COMMIT_MESSAGE=${{ github.event.head_commit.message || github.event.workflow_run.head_commit.message }}" >> "$GITHUB_OUTPUT"
          fi
          echo "Message is set:"
      # - if: ${{ github.ref != 'refs/heads/main' }}
      #   name: Output commit message on the pull request
      #   id: commit_message_step
      #   run: |
      #     response=$(curl --request GET --url 'https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits?page=1&per_page=1000' --header 'Accept: application/vnd.github.v3+json' --header 'Content-Type: application/json')
      #     last_commit_message=$(echo "$response" | jq '.[-1].commit.message')
      #     echo "COMMIT_MESSAGE=$last_commit_message" >> $GITHUB_OUTPUT
      # - if: ${{ github.ref == 'refs/heads/main' }}
      #   name: Output commit message from main merge
      #   id: commit_message_main
      #   run: |
      #     echo "::set-output name=last_commit_message::${{ github.event.head_commit.message || github.event.workflow_run.head_commit.message }}"
      # - name: Upload Lighthouse to MongoDB
      #   uses: mongodb/docs-worker-actions/upload-lighthouse@main
      #   env:
      #     PROJECT_TO_BUILD: ${{ matrix.project }}
      #     COMMIT_MESSAGE: ${{ fromJson(steps.commit_message_step.outputs.last_commit_message) }}
      #     COMMIT_TIMESTAMP: ${{ steps.commit_timestamp_step.outputs.commit_timestamp }}
      #     BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      #     ATLAS_URI: ${{ secrets.ATLAS_URI }}
      - name: Output vars
        id: output
        run: |
          echo "here we go"
          echo "${{ steps.commit_message_step.outputs.COMMIT_MESSAGE }}"